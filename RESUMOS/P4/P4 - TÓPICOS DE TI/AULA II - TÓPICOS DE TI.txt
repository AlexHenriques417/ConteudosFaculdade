AULA II - TÓPICOS DE TI

- MVC
PADRÃO DE ARQUITETURA DE SOFTWARE
MODEL - DADOS E REGRAS DE NEGÓCIO
VIEW - INTERFACE COM O USUÁRIO
CONTROLLER - RECEBE ENTRADAS, CHAMA O MODELO E ATUALIZA A VIEW

- JAVASCRIPT
LINGUAGEM ESSENCIAL PARA WEB
MANIPULA DOM, TRATA EVENTOS E FAZ REQUISIÇÕES ASSÍNCRONAS

- TYPESCRIPT
SUPORTE DO JS COM TIPAGEM ESTÁTICA
FACILITA MANUTENÇÃO E REDUZIR ERROS EM PROJETOS GRANDES
COMPILADO PARA JS ANTES DA EXECUÇÃO

- COMPILAÇÃO
PROCESSO DE TRANSFORMAR CÓDIGO-FONTE EM OUTRO FORMATO ( TS->JS )
GARANTE QUE ERROS DE SINTAXE E TIPO SEJAM DETECTADOS DA EXECUÇÃO

- ARQUITETURA FULLSTACK
ENVOLVE FRONT-END(UI) + BACK-END(API) + BANCO DE DADOS(PERSISTÊNCIA)
RAECT(FRONT) + NODE/EXPRESS(BACK) + POSTGRESQL(BANCO DE DADOS)

- CLIENTE-SERVIDOR(HTTP)
COMUNICAÇÃO ENTRE CLIENTE (NAVEGADOR) E SERVIDOR(API)
BASEADO NO PROTOCOLO HTTP COM MÉTODOS COMO GET, POST, PUT E DELETE

- FRONT/ BACK/ BANCO
FRONT-END - INTERFACE E INTERCEPTAÇÃO
BACK-END - LÓGICA, REGRAS E APLICAÇÕES
BANCO DE DADOS - ARMAZENAMENTO DE DADOS

- CONTROLE DE VERSÕES
HISTÓRICO DE CÓDIGO, COLABORAÇÃO EM EQUIPE, BRANCHES E MARGES
GITHUB, GITLAB E BITBUCKET

- MÉTODOS HTTP
POST - CRIAR
GET - LER
PUT - ATUALIZAR
DELETE - DELETAR