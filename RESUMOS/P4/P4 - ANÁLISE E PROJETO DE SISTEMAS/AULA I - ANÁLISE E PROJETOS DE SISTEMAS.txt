AULA I - ANÁLISE E PROJETOS DE SISTEMA

- PORQUE OS BUGS ACONTECEM ?
FALTA DE TESTES
PROEJTOS MAL FEITOS
FALTA DE CONTROLE DE QUALIDADE
O CLIENTE NÃO SABE O QIUE QUER

- PROBLEMAS REAIS
GRACE MIURRAY HOPPER
MARINER I
ARIANE 5 VOO 501
BUG DO MILÊNIO

- "O MUNDO MODERNO NÃO PODERIA EXISTIR SEM O SOFTWARE"
INTERNET, PRODUTOS, SERVIÇOS, TRANSPORTES, SAÚDE, TELECOMUNICAÇÕES E FINANCEIRO

- SOFTWARE 
CÓDIGOS + DADOS + DOCUMENTAÇÃO
INSTRUÇÕES DE COMPUTADOR
ESTRUTURAS DE DADOS 
DOCUMENTOS

- PROCESSOS 
PENSA NO DESENVOLVIMENTO DE SOFTWARE ( QUEM VAI FAZER O QUE E QUANDO VAI FAZER )
CONJUNTO DE ATIVIDADES

- MÉTODOS
CONHECIMENTO TÉCNICO, "COMO" VAI FAZER
DIFERETES MÉTODOS PARA CADA ETAPA DO DESENVOLVIMENTO
MÉTODOS DISTINTOS PARA ANÁLISE, PROJETO, CODIFICAÇÃO, TESTES E MANUTENÇÃO

- FERRAMENTAS
SUPORTE AUTOMATIZADO
STARUML, ASTAH ( MODELAGEM UML )

- OBJETIVO
QUALIDADE
PRODUTIVIDADE ( DESENVOLVIMENTO, OPERAÇÃO E MANUTENÇÃO )
CONTROLE ( CUSTOS E PRAZOS )

- ENGENHARIA DE SOFTWARE
SOFTWARE
HARDWARE
PROCESSOS
PESSOAS

- SURGIMENTO DA ENGENHRIA DE SOFTWARE 

- DÉCADA DE 50
CONCEITO ABSTRATO
NÃO HAVIA DIREÇÃO
SE PROCESSOS NO SEU DESENVOLVIMENTO
APENAS FOCADO NA CODIFICAÇÃO

- DÉCADA DE 60 
SEM CONTROLE NO DESENVOLVIMENTO
SOFTWARE ERA O FOCO
ORGANIZAÇÃO APENAS NAS GRANDES EMPRESAS

OBS : CRISE DO SOFTWARE ( 1968 ) 
TERMO ENGENHARIA DE SOFTWARE É ORIGINADO

- PORQUE HOUVE A CRISE DE SOFTWARE ?
DIFICULDADES DO DESENVOLVIMENTO DE SOFTWARE
BOOM DE DEMANDAS POR SOFTWARE
COMPLEXIDADE DOS PROBLEMAS
INEXISTÊNCIA DE TÉCNICAS

- DÉCADA DE 70
PROGRAMAÇÃO ESTRUTURADA
PROJETO ESTRUTURADO

- DÉCADA DE 80
ANÁLISE ESTRUTUADA ( DICIONARIO DE DADOS, DIAGRAMAS E ESTADOS )
FERRAMENTAS CASE ( ESTRUTURAS QUE AUXILIAM NOS REQUISITOS ATÉ AVALIAÇÃO DE TESTES )

- DÉCADA DE 90
ANÁLISE E PROEJTO OO
JAVA
UML
PROCESSO UNIFICADO

- DÉCADA DE 2000
METOLOGIAS ÁGEIS
NOVOS PARADIGMAS 
CLOUD COMPUTING

- FALTA DE METODOLOGIA PODE CAUSAR 
EQUIPES SEM TER O MODELO DE DESENVOLVIMENTO
SEM DOCUMENTAÇÃO
COMO DAR A MANUTENÇÃO SEM CONHECER O SISTEMA

- O QUE INSERIR NA ENGENHARIA DE SOFTWARE
GERENCIAMENTO DE PROCESSODE DESENVOLVIMENTO
SOFTWARES COM QUALIDADE

- ENGENHEIROS DE SOFTWARE DEVEM 
1. NECESSIDAS DO CLIENTE
2. ESPECIFICAÇÕES DE REQUISITOS
3. VALIDAÇÃO JUNTO AO CLIENTE
4. DESENVOLVIMENTO TESTES
5. ENTREGA HOMOLAGAÇÃO DE IMPLEMENTAÇÃO
6. UTILIZAÇÃO DE SUPORTE

- BOM FUNCIONAMENTO DO PRDUTO FINAL 
EVITAR DEPENDÊNCIA DE DETERMINADAS PESSOAS OU PROCE3SSOS
ABSTRAIR ASPECTOS IMPORTANTES
SUBDIVIDIR PROBLEMNAS COMPLEXOS
REUTILIZR RESULTADOS 
FLEBILIZAÇÃO E MODULARIZAÇÃO PARA FACILITAR A MANUTENÇÃO

- MULDISCIPLINAR
CIÊNCIAS DA COMUNICAÇÃO
ADMINISTRAÇÃO
COMUNICAÇÃO
TÉCNICAS DE SOLUÇÃO DE PROBLEMAS

- DESAFIOS
REDUZIR CUSTOS
MELHORAR A QUALIDADE DE SOFTWARE
ATENDER AS EXPECTATIVAS DO CLIENTE

- PROCESSO DE SOFTWARE
DEFINE QUEM ESTAR FAZENDO O QUE
QUANDO VAI FAZER
COMO PARA ATINGIR O DETERMINADO OBJETIVO

- PROCESSOS DE DESENVOLVIMENTO DE SOFTWARE
MODELO CASCATA
MODELO EM ESPIRAL
PROTOTIPAÇÃO
DESENVOLVIENTO INCREMENTAL
DESENVOLVIMENTO ITERATIVO

- APLICÁVEIS MANEIRAS DO DESENVOLVIMENTO
COMUNICAÇÃO
PLANEJAMENTO
MODELAGEM
CONSTRUÇÃO
IMPLANTAÇÃO

- ATIVIDADES FUNDAMENTAIS
1. ESPECIFICAÇÃO DE SOFTWARE
2. DESENVOLVIMENTO D SOFTWARE
3. VALIDAÇÃO DE SOFTWARE
4. EVOLUÇÃO DE SOFTWARE

- ATRIBUTOS DE UM BOM SOFTWARE
MANUTENIBILIDADE
CONFIABILIDADE
EFICIÊNCIA
USABILIDADE

- PRINCIPAIS DESAFIOS 
SISTEMAS LEGADOS
HETEROGENEIDADE
ENTREGA
